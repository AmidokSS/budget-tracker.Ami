generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  name       String      @unique
  createdAt  DateTime    @default(now())
  operations Operation[]
}

model Category {
  id         String      @id @default(cuid())
  name       String
  type       String
  emoji      String
  createdAt  DateTime    @default(now())
  limits     Limit[]
  operations Operation[]
}

model Goal {
  id            String    @id @default(cuid())
  title         String
  targetAmount  Float
  currentAmount Float     @default(0)
  deadline      DateTime?
  emoji         String    @default("ðŸ’°")
  archived      Boolean   @default(false)
  createdAt     DateTime  @default(now())
}

model Limit {
  id            String   @id @default(cuid())
  categoryId    String
  limitAmount   Float
  currentAmount Float    @default(0)
  active        Boolean  @default(true)
  isAutoCreated Boolean  @default(false)
  createdAt     DateTime @default(now())
  category      Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}

model Operation {
  id         String   @id @default(cuid())
  userId     String
  categoryId String
  type       String
  amount     Float
  note       String?
  date       DateTime
  createdAt  DateTime @default(now())
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([categoryId])
  @@index([date])
  @@index([type])
}
